name: Terraform Automation

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main  

jobs:
  terraform:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2 
        with:
          terraform_version: 1.5.0  

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Initialise project and view terraform plan
        run: |
          terraform init 
          terraform plan  
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-1

      - name: Terraform Apply
        run: terraform apply -auto-approve 
        continue-on-error: true

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com

      - name: Build Docker image for server
        run: |
          docker build --no-cache  -t bdg-repoarmentest-1 -f server/Dockerfile.dev server/
          docker tag bdg-repoarmentest-1:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com/bdg-repoarmentest-1:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com/bdg-repoarmentest-1:latest

      - name: Build Docker image for client
        run: |
          docker build -t bdg-repoarmentest-2 -f client/Dockerfile.dev client/
          docker tag bdg-repoarmentest-2:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com/bdg-repoarmentest-2:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com/bdg-repoarmentest-2:latest

      - name: Build Docker image for nginx
        run: |
          docker build -t bdg-repoarmentest-3 -f nginx/Dockerfile.dev nginx/
          docker tag bdg-repoarmentest-3:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com/bdg-repoarmentest-3:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-west-1.amazonaws.com/bdg-repoarmentest-3:latest

      - name: Scan Server Image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: bdg-repoarmentest-1:latest
          format: 'table'
          ignore-unfixed: true
        continue-on-error: false 

      - name: Scan Client Image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: bdg-repoarmentest-2:latest
          format: 'table'
          ignore-unfixed: true
        continue-on-error: false 

      - name: Scan Nginx Image with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: bdg-repoarmentest-3:latest
          format: 'table'
          ignore-unfixed: true
        continue-on-error: false
